# Generated by Django 5.0 on 2024-01-03 04:23

import base.models
import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=100)),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(default='+213876543232', max_length=128, region='DZ')),
                ('category', models.CharField(choices=[('سوبرماركت', 'سوبرماركت'), ('مقهى', 'مقهى'), ('محل جملة', 'محل جملة'), ('محل نصف جملة', 'محل نصف جملة')], default=' ', max_length=75)),
                ('notes', models.TextField(default='note', max_length=150)),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='DZ')),
                ('job_position', models.CharField(max_length=20)),
                ('truck_num', models.IntegerField(null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0, 0), srid=4326)),
                ('salary', models.FloatField()),
                ('sale_percentage', models.FloatField(null=True)),
                ('address', models.CharField(max_length=100)),
                ('notes', models.TextField(default=' ', max_length=150)),
                ('birthday', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_name', models.CharField(max_length=100)),
                ('details', models.TextField(max_length=100)),
                ('name', models.CharField(max_length=50)),
                ('amount', models.IntegerField()),
                ('receipt_num', models.IntegerField()),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Medium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MediumTwo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OrderEnvoy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(max_length=50)),
                ('address', models.CharField(default='address', max_length=100)),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='DZ')),
                ('products_num', models.IntegerField(default=0)),
                ('total_price', models.FloatField(default=0)),
                ('created', models.DateField(auto_now_add=True)),
                ('delivery_date', models.DateField()),
                ('delivered', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Registry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('company_name', models.CharField(max_length=50)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='DZ')),
                ('address', models.CharField(max_length=100)),
                ('info', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='DZ', unique=True)),
                ('username', models.CharField(max_length=200)),
                ('is_verified', models.BooleanField(default=False)),
                ('image', models.ImageField(default='images/account.jpg', null=True, upload_to='images/users')),
                ('location', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0, 0), srid=4326)),
                ('is_accepted', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('user_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.usertype')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
            ],
        ),
        migrations.CreateModel(
            name='CodeVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_verified', models.BooleanField(default=False)),
                ('code', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(9999)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(default=base.models.get_expiration_time)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Debt_Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('payment_method', models.CharField(choices=[('نقدا', 'نقدا'), ('بنك', 'بنك')], max_length=30)),
                ('bank_name', models.CharField(default='_', max_length=60)),
                ('receipt_num', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('client_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
            ],
        ),
        migrations.CreateModel(
            name='Deposite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail_deposite', models.CharField(max_length=50)),
                ('total', models.FloatField()),
                ('verify_code', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Advance_On_salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('days', models.IntegerField()),
                ('amount', models.FloatField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Extra_Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(max_length=100)),
                ('amount', models.FloatField()),
                ('barcode', models.CharField(default=' ', max_length=200)),
                ('date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Incoming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent', models.CharField(max_length=30)),
                ('num_truck', models.IntegerField(null=True)),
                ('code_verefy', models.IntegerField()),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='DZ')),
                ('recive_pyement', models.FloatField()),
                ('discount', models.FloatField()),
                ('Reclaimed_products', models.FloatField(default=0)),
                ('previous_depts', models.FloatField()),
                ('remaining_amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('barcode', models.CharField(default=uuid.uuid4, editable=False, max_length=200)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ManualReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verify_code', models.IntegerField()),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='DZ')),
                ('recive_payment', models.FloatField()),
                ('reclaimed_products', models.FloatField()),
                ('previous_depts', models.FloatField()),
                ('remaining_amount', models.FloatField(default=0)),
                ('date', models.DateField(auto_now_add=True)),
                ('barcode', models.CharField(default=uuid.uuid4, editable=False, max_length=200)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=500)),
                ('title', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField()),
                ('products_num', models.IntegerField(default=0)),
                ('created', models.DateField(auto_now_add=True)),
                ('delivery_date', models.DateField()),
                ('delivered', models.BooleanField(default=False, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
            ],
        ),
        migrations.CreateModel(
            name='Output',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verify_code', models.IntegerField()),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(default='+213672007698', max_length=128, region='DZ')),
                ('recive_pyement', models.FloatField()),
                ('discount', models.FloatField()),
                ('Reclaimed_products', models.FloatField()),
                ('previous_depts', models.FloatField()),
                ('remaining_amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('barcode', models.CharField(default=uuid.uuid4, editable=False, max_length=200)),
                ('location', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0.0, 0.0), srid=4326)),
                ('delivered', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='DelievaryArrived',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delivered', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
                ('output_receipt', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.output')),
            ],
        ),
        migrations.CreateModel(
            name='OverTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_hours', models.FloatField()),
                ('amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('payment_method', models.CharField(choices=[('نقدا', 'نقدا'), ('بنك', 'بنك')], max_length=30)),
                ('bank_name', models.CharField(default='_', max_length=60)),
                ('receipt_num', models.IntegerField()),
                ('amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Points',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.FloatField()),
                ('expire_date', models.DateField()),
                ('date', models.DateField(auto_now_add=True)),
                ('is_used', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='images/products')),
                ('description', models.TextField(max_length=2000)),
                ('quantity', models.IntegerField()),
                ('purchasing_price', models.FloatField()),
                ('notes', models.TextField(max_length=1000)),
                ('limit_less', models.IntegerField(default=0)),
                ('limit_more', models.IntegerField(default=0)),
                ('num_per_item', models.IntegerField()),
                ('item_per_carton', models.IntegerField()),
                ('sale_price', models.IntegerField(default=50)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('barcode', models.CharField(default=' ', max_length=200)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.category')),
            ],
            options={
                'ordering': ['-added'],
            },
        ),
        migrations.CreateModel(
            name='Output_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('total', models.FloatField(default=0)),
                ('discount', models.FloatField()),
                ('output', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.output')),
                ('products', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
        ),
        migrations.AddField(
            model_name='output',
            name='products',
            field=models.ManyToManyField(through='base.Output_Products', to='base.product'),
        ),
        migrations.CreateModel(
            name='Order_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('total_price', models.FloatField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(through='base.Order_Product', to='base.product'),
        ),
        migrations.CreateModel(
            name='MediumTwo_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('mediumtwo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.mediumtwo')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
        ),
        migrations.AddField(
            model_name='mediumtwo',
            name='products',
            field=models.ManyToManyField(through='base.MediumTwo_Products', to='base.product'),
        ),
        migrations.CreateModel(
            name='ManualReceipt_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('num_item', models.IntegerField(default=0)),
                ('total_price', models.FloatField(default=0)),
                ('manualreceipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.manualreceipt')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
        ),
        migrations.AddField(
            model_name='manualreceipt',
            name='products',
            field=models.ManyToManyField(through='base.ManualReceipt_Products', to='base.product'),
        ),
        migrations.CreateModel(
            name='Incoming_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_item', models.IntegerField()),
                ('total_price', models.FloatField()),
                ('incoming', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.incoming')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
        ),
        migrations.AddField(
            model_name='incoming',
            name='products',
            field=models.ManyToManyField(through='base.Incoming_Product', to='base.product'),
        ),
        migrations.CreateModel(
            name='DamagedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('total_price', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
        ),
        migrations.CreateModel(
            name='Cart_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.cart')),
                ('products', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
            options={
                'ordering': ['products__added'],
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='items',
            field=models.ManyToManyField(through='base.Cart_Products', to='base.product'),
        ),
        migrations.CreateModel(
            name='Product_Order_Envoy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_envoy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.orderenvoy')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
        ),
        migrations.AddField(
            model_name='orderenvoy',
            name='products',
            field=models.ManyToManyField(through='base.Product_Order_Envoy', to='base.product'),
        ),
        migrations.CreateModel(
            name='Products_Medium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(blank=True, null=True)),
                ('num_item', models.IntegerField(default=0)),
                ('total_price', models.FloatField(default=0)),
                ('medium', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.medium')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
        ),
        migrations.AddField(
            model_name='medium',
            name='products',
            field=models.ManyToManyField(through='base.Products_Medium', to='base.product'),
        ),
        migrations.CreateModel(
            name='Recieved_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('payment_method', models.CharField(choices=[('نقدا', 'نقدا'), ('بنك', 'بنك')], max_length=30)),
                ('bank_name', models.CharField(default='_', max_length=60)),
                ('receipt_num', models.IntegerField()),
                ('amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnedGoodsClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('total_price', models.FloatField()),
                ('reason', models.CharField(max_length=50)),
                ('date', models.DateField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
            ],
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=100)),
                ('job_position', models.CharField(max_length=50)),
                ('salary', models.FloatField()),
                ('percentage', models.FloatField()),
                ('barcode', models.CharField(default=uuid.uuid4, editable=False, max_length=200)),
                ('overtime', models.FloatField(default=0.0)),
                ('absence', models.FloatField(default=0.0)),
                ('bonus', models.FloatField(default=0.0)),
                ('discount', models.FloatField(default=0.0)),
                ('advances', models.FloatField(default=0.0)),
                ('extra_expense', models.FloatField(default=0.0)),
                ('total', models.FloatField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_salaries', to='base.employee')),
                ('hr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hr_employee_salaries', to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnedGoodsSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('total_price', models.FloatField()),
                ('reason', models.CharField(max_length=50)),
                ('date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.employee')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.product')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.supplier')),
            ],
        ),
        migrations.AddField(
            model_name='incoming',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.supplier'),
        ),
        migrations.CreateModel(
            name='Debt_Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('payment_method', models.CharField(choices=[('نقدا', 'نقدا'), ('بنك', 'بنك')], max_length=30)),
                ('bank_name', models.CharField(default='_', max_length=60)),
                ('check_num', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('supplier_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='WithDraw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details_withdraw', models.CharField(max_length=50)),
                ('total', models.FloatField()),
                ('verify_code', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
            ],
        ),
    ]
